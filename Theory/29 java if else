Java If ... Else

Java supports the usual logical conditions from mathematics:

Less than:                a < b
Less than or equal to:    a <= b
Greater than:             a > b
Greater than or equal to: a >= b
Equal to:                 a == b
Not Equal to:             a != b

Java has the following conditional statements:

Use if to specify a block of code to be executed, if a specified condition is true
Use else to specify a block of code to be executed, if the same condition is false
Use else if to specify a new condition to test, if the first condition is false
Use switch to specify many alternative blocks of code to be executed

The if Statement:
Use the if statement to specify a block of Java code to be executed if a condition is true.

if (condition) {
  // block of code to be executed if the condition is true
}

Java Else : 

Use the else statement to specify a block of code to be executed if the condition is false.

if (condition) {
  // block of code to be executed if the condition is true
} else {
  // block of code to be executed if the condition is false
}

eg : RLEIE.java

Java Else if :

if (condition1) {
  // block of code to be executed if condition1 is true
} else if (condition2) {
  // block of code to be executed if the condition1 is false and condition2 is true
} else {
  // block of code to be executed if the condition1 is false and condition2 is false
}

eg : RLEIE.java

Java Short Hand If...Else (Ternary Operator)

There is also a short-hand if else, which is known as the ternary operator because it consists of three operands.

variable = (condition) ? expressionTrue :  expressionFalse;

eg : RLEIE.java


